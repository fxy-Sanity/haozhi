<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	
	<!-- 容器注解扫描 
		可能存在bean的包及子包-->
	<context:component-scan base-package="com.hcf.vote"/>
	
	<!-- 引入外部属性文件 -->
	<context:property-placeholder location="classpath:db.properties"/>
	
	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
		<property name="initialSize" value="${jdbc.initialSize}"/>
		<property name="minIdle" value="${jdbc.minIdle}"/>
		<property name="maxTotal" value="${jdbc.maxTotal}"/>
	</bean>
	
	<!-- 配置mybatis框架整合 -->
	<!-- 创建sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="typeAliasesPackage" value="com.hcf.vote.entity"/><!-- 定义采用别名包 -->
		<property name="mapperLocations" value="classpath:mapper/*Mapper.xml"/>
	</bean>
	
	<!-- 配置mybatis的mapper bean -->
	<!--创建映射接口代理实现类对象，创建bean的名称默认为映射接口名首字母小写  -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 设置映射接口所在的包 -->
		<property name="basePackage" value="com.hcf.vote.mapper"/>
		<!-- 设置sqlSessionFactory工厂类在spring容器中的bean的名称 -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>
	
	<!-- 请求拦截后，交给对应的请求处理操作后，根据返回结果拼接响应页面路径 
		prefix + 返回值 + suffix 
		==> /page/success.html 
		InternalResourceViewResolver:视图处理器配置，做响应时用
		-->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/page/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 默认静态资源的请求处理 -->
	<mvc:default-servlet-handler/>
	<!-- 控制器驱动处理 
		包含：数据类型转换,数据格式化
	-->
	<!-- <mvc:annotation-driven conversion-service="conversionService"/>
	
	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="converters">
			<set>
				<bean class="com.yc.emp.handler.EmployeeConversion"></bean>
				<ref bean="employeeConversion"/>
			</set>
		</property>
	
	</bean> -->
</beans>  