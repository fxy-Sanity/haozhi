
#  配置根logger
#  ALL < DEBUG < INFO <WARN < ERROR < FATAL < OFF
#  Log4j 建议只使用四个级别，优先级从高到低分别是ERROR、WARN、INFO、DEBUG
#  如果在这里定义了 INFO 级别，则应用程序中所有DEBUG 级别的日志信息将不被打印出来

  log4j.rootLogger=debug,appender1

# 配置Appender日志信息输出目的地(文件)
#  RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件）

  log4j.appender.appender1=org.apache.log4j.RollingFileAppender
  

  #file指定消息输出到log文件夹中的 log.log 文件
  log4j.appender.appender1.File=logs/log.log
  
  #只输出Info级别以上的日志
  #log4j.appender.appender1.Threshold = info 
  
  #MaxFileSize：文件允许的最大内存。后缀可以是 KB, MB 或者是 GB. 在日志文件到达该大小时，
  #将会自动滚动，即将原来的内容移到 log.log.1 文件。
  
  log4j.appender.appender1.MaxFileSize=1KB
  
  #MaxBackupIndex：指定可以产生的滚动文件的最大数
  log4j.appender.appender1.MaxBackupIndex=2 
  

#配置日志信息的格式/布局：Layout
#PatternLayout （可以灵活地指定布局模式）
  log4j.appender.appender1.layout=org.apache.log4j.PatternLayout


  #ConversionPattern=%m%n :指定怎样格式化指定的消息。  
  log4j.appender.appender1.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,SSS} - %c - %m%n
  
  